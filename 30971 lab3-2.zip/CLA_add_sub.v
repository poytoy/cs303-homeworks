/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module \4_bit_carry_lookahead  (
  input P2,
  input G2,
  input P1,
  input G1,
  input P0,
  input G0,
  input C0,
  input P3,
  input G3,
  output C3,
  output C2,
  output C1,
  output C4
);
  assign C3 = ((((C0 & P0) & (P1 & P2)) | ((G0 & P1) & P2)) | ((G1 & P2) | G2));
  assign C1 = ((C0 & P0) | G0);
  assign C2 = ((C0 & (P0 & P1)) | ((G0 & P1) | G1));
  assign C4 = (((G3 | (G2 & P3)) | (((P2 & P3) & G1) | ((G0 & P1) & (P2 & P3)))) | ((P3 & (P2 & P1)) & (C0 & P0)));
endmodule

module \4_bit_lookahead_adder  (
  input a3,
  input b3,
  input b2,
  input a1,
  input b1,
  input a0,
  input b0,
  input c0,
  input a2,
  output S1,
  output S2,
  output S3,
  output C4,
  output S0
);
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire s11;
  wire s12;
  wire s13;
  wire s14;
  assign s4 = (a3 & b3);
  assign s5 = (a2 & b2);
  assign s6 = (a0 & b0);
  assign s7 = (a1 & b1);
  assign s8 = (a3 ^ b3);
  assign s9 = (a2 ^ b2);
  assign s10 = (a1 ^ b1);
  assign s11 = (a0 ^ b0);
  // lookahead
  \4_bit_carry_lookahead  \4_bit_carry_lookahead_i0 (
    .P2( s9 ),
    .G2( s5 ),
    .P1( s10 ),
    .G1( s7 ),
    .P0( s11 ),
    .G0( s6 ),
    .C0( c0 ),
    .P3( s8 ),
    .G3( s4 ),
    .C3( s12 ),
    .C2( s13 ),
    .C1( s14 ),
    .C4( C4 )
  );
  assign S0 = (s11 ^ c0);
  assign S1 = (s14 ^ s10);
  assign S2 = (s13 ^ s9);
  assign S3 = (s12 ^ s8);
endmodule

module CLA_add_sub (input   [15:0]          A,
input   [15:0]          B,
input                   Mode, // 0 --> addition , 1 --> subtraction
output  [15:0]          S,
output                  Cout,
output                  OVF
  
);
  wire s16;
  wire s17;
  wire s18;
  wire s19;
  wire s20;
  wire s21;
  wire s22;
  wire s23;
  wire s24;
  wire s25;
  wire s26;
  wire s27;
  wire s28;
  wire s29;
  wire s30;
  wire s31;
  wire s32;
  wire s33;
  wire s34;
  wire s35;
  wire S15_temp;
  assign s16 = (Mode ^ B[3]);
  assign s17 = (Mode ^ B[2]);
  assign s18 = (Mode ^ B[1]);
  assign s19 = (Mode ^ B[0]);
  assign s22 = (Mode ^ B[7]);
  assign s23 = (Mode ^ B[6]);
  assign s24 = (Mode ^ B[5]);
  assign s25 = (Mode ^ B[4]);
  assign s30 = (Mode ^ B[8]);
  assign s29 = (Mode ^ B[9]);
  assign s28 = (Mode ^ B[10]);
  assign s27 = (Mode ^ B[11]);
  assign s32 = (Mode ^ B[15]);
  assign s33 = (Mode ^ B[14]);
  assign s34 = (Mode ^ B[13]);
  assign s35 = (Mode ^ B[12]);
  assign s20 = (Mode | 0);
  // adder0
  \4_bit_lookahead_adder  \4_bit_lookahead_adder_i0 (
    .a3( A[3] ),
    .b3( s16 ),
    .b2( s17 ),
    .a1( A[1] ),
    .b1( s18 ),
    .a0( A[0] ),
    .b0( s19 ),
    .c0( s20 ),
    .a2( A[2] ),
    .S1( S[1] ),
    .S2( S[2] ),
    .S3( S[3] ),
    .C4( s21 ),
    .S0( S[0] )
  );
  // adder1
  \4_bit_lookahead_adder  \4_bit_lookahead_adder_i1 (
    .a3( A[7] ),
    .b3( s22 ),
    .b2( s23 ),
    .a1( A[5] ),
    .b1( s24 ),
    .a0( A[4] ),
    .b0( s25 ),
    .c0( s21 ),
    .a2( A[6] ),
    .S1( S[5] ),
    .S2( S[6] ),
    .S3( S[7] ),
    .C4( s26 ),
    .S0( S[4] )
  );
  // adder2
  \4_bit_lookahead_adder  \4_bit_lookahead_adder_i2 (
    .a3( A[11] ),
    .b3( s27 ),
    .b2( s28 ),
    .a1( A[9] ),
    .b1( s29 ),
    .a0( A[8] ),
    .b0( s30 ),
    .c0( s26 ),
    .a2( A[10] ),
    .S1( S[9] ),
    .S2( S[10] ),
    .S3( S[11] ),
    .C4( s31 ),
    .S0( S[8] )
  );
  // adder3
  \4_bit_lookahead_adder  \4_bit_lookahead_adder_i3 (
    .a3( A[15] ),
    .b3( s32 ),
    .b2( s33 ),
    .a1( A[13] ),
    .b1( s34 ),
    .a0( A[12] ),
    .b0( s35 ),
    .c0( s31 ),
    .a2( A[14] ),
    .S1( S[13] ),
    .S2( S[14] ),
    .S3( S15_temp ),
    .C4( Cout ),
    .S0( S[12] )
  );
  assign OVF = (((s32 & A[15]) & ~ S15_temp) | ((~ s32 & ~ A[15]) & S15_temp));
  assign S[15] = S15_temp;
endmodule
